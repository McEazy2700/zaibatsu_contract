{
    "hints": {
        "hello(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create()bool": {
            "call_config": {
                "no_op": "ALL"
            }
        },
        "update()bool": {
            "call_config": {
                "update_application": "CALL"
            }
        },
        "delete()bool": {
            "call_config": {
                "delete_application": "CALL"
            }
        },
        "set_service_contract_address(address)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_zaibatsu_token()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transfer_zai(address,uint64,string)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "fund_pool(uint64,application,axfer)(uint64,uint64,bool)": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "PoolFundResponse",
                    "elements": [
                        [
                            "amount",
                            "uint64"
                        ],
                        [
                            "asset_price",
                            "uint64"
                        ],
                        [
                            "success",
                            "bool"
                        ]
                    ]
                }
            }
        },
        "approve_pool_vote(axfer)(uint64,string)": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "PoolVoteApprovalResponse",
                    "elements": [
                        [
                            "multiplier",
                            "uint64"
                        ],
                        [
                            "txn_id",
                            "string"
                        ]
                    ]
                }
            }
        },
        "opt_contract_into_asset(asset)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transfer_asset(asset,uint64,account)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuemFpYmF0c3VfYXV0aF9hbmRfZGFvLmNvbnRyYWN0LlphaWJhdHN1QXV0aEFuZERhby5hcHByb3ZhbF9wcm9ncmFtOgogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGJueiBtYWluX2VudHJ5cG9pbnRAMgogICAgY2FsbHN1YiBfX2luaXRfXwoKbWFpbl9lbnRyeXBvaW50QDI6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjEzCiAgICAvLyBjbGFzcyBaYWliYXRzdUF1dGhBbmREYW8oWmFpYmF0c3VCYXNlKToKICAgIG1ldGhvZCAiaGVsbG8oc3RyaW5nKXN0cmluZyIKICAgIG1ldGhvZCAiY3JlYXRlKClib29sIgogICAgbWV0aG9kICJ1cGRhdGUoKWJvb2wiCiAgICBtZXRob2QgImRlbGV0ZSgpYm9vbCIKICAgIG1ldGhvZCAic2V0X3NlcnZpY2VfY29udHJhY3RfYWRkcmVzcyhhZGRyZXNzKWJvb2wiCiAgICBtZXRob2QgImNyZWF0ZV96YWliYXRzdV90b2tlbigpdWludDY0IgogICAgbWV0aG9kICJ0cmFuc2Zlcl96YWkoYWRkcmVzcyx1aW50NjQsc3RyaW5nKWJvb2wiCiAgICBtZXRob2QgImZ1bmRfcG9vbCh1aW50NjQsYXBwbGljYXRpb24sYXhmZXIpKHVpbnQ2NCx1aW50NjQsYm9vbCkiCiAgICBtZXRob2QgImFwcHJvdmVfcG9vbF92b3RlKGF4ZmVyKSh1aW50NjQsc3RyaW5nKSIKICAgIG1ldGhvZCAib3B0X2NvbnRyYWN0X2ludG9fYXNzZXQoYXNzZXQpYm9vbCIKICAgIG1ldGhvZCAidHJhbnNmZXJfYXNzZXQoYXNzZXQsdWludDY0LGFjY291bnQpYm9vbCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5faGVsbG9fcm91dGVAMyBtYWluX2NyZWF0ZV9yb3V0ZUA0IG1haW5fdXBkYXRlX3JvdXRlQDUgbWFpbl9kZWxldGVfcm91dGVANiBtYWluX3NldF9zZXJ2aWNlX2NvbnRyYWN0X2FkZHJlc3Nfcm91dGVANyBtYWluX2NyZWF0ZV96YWliYXRzdV90b2tlbl9yb3V0ZUA4IG1haW5fdHJhbnNmZXJfemFpX3JvdXRlQDkgbWFpbl9mdW5kX3Bvb2xfcm91dGVAMTAgbWFpbl9hcHByb3ZlX3Bvb2xfdm90ZV9yb3V0ZUAxMSBtYWluX29wdF9jb250cmFjdF9pbnRvX2Fzc2V0X3JvdXRlQDEyIG1haW5fdHJhbnNmZXJfYXNzZXRfcm91dGVAMTMKICAgIGVyciAvLyByZWplY3QgdHJhbnNhY3Rpb24KCm1haW5faGVsbG9fcm91dGVAMzoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTcKICAgIC8vIEBhNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGlzIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMwogICAgLy8gY2xhc3MgWmFpYmF0c3VBdXRoQW5kRGFvKFphaWJhdHN1QmFzZSk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjE3CiAgICAvLyBAYTQuYWJpbWV0aG9kKCkKICAgIGNhbGxzdWIgaGVsbG8KICAgIGJ5dGUgMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludCAxCiAgICByZXR1cm4KCm1haW5fY3JlYXRlX3JvdXRlQDQ6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjIxCiAgICAvLyBAYTQuYWJpbWV0aG9kKGNyZWF0ZT0iYWxsb3ciKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICBjYWxsc3ViIGNyZWF0ZQogICAgYnl0ZSAweDAwCiAgICBpbnQgMAogICAgdW5jb3ZlciAyCiAgICBzZXRiaXQKICAgIGJ5dGUgMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludCAxCiAgICByZXR1cm4KCm1haW5fdXBkYXRlX3JvdXRlQDU6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjI2CiAgICAvLyBAYTQuYWJpbWV0aG9kKGFsbG93X2FjdGlvbnM9WyJVcGRhdGVBcHBsaWNhdGlvbiJdKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgaW50IFVwZGF0ZUFwcGxpY2F0aW9uCiAgICA9PQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBVcGRhdGVBcHBsaWNhdGlvbgogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBpcyBub3QgY3JlYXRpbmcKICAgIGNhbGxzdWIgdXBkYXRlCiAgICBieXRlIDB4MDAKICAgIGludCAwCiAgICB1bmNvdmVyIDIKICAgIHNldGJpdAogICAgYnl0ZSAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50IDEKICAgIHJldHVybgoKbWFpbl9kZWxldGVfcm91dGVANjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MzUKICAgIC8vIEBhNC5hYmltZXRob2QoYWxsb3dfYWN0aW9ucz1bIkRlbGV0ZUFwcGxpY2F0aW9uIl0pCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBpbnQgRGVsZXRlQXBwbGljYXRpb24KICAgID09CiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIERlbGV0ZUFwcGxpY2F0aW9uCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGlzIG5vdCBjcmVhdGluZwogICAgY2FsbHN1YiBkZWxldGUKICAgIGJ5dGUgMHgwMAogICAgaW50IDAKICAgIHVuY292ZXIgMgogICAgc2V0Yml0CiAgICBieXRlIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnQgMQogICAgcmV0dXJuCgptYWluX3NldF9zZXJ2aWNlX2NvbnRyYWN0X2FkZHJlc3Nfcm91dGVANzoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6NDEKICAgIC8vIEBhNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGlzIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMwogICAgLy8gY2xhc3MgWmFpYmF0c3VBdXRoQW5kRGFvKFphaWJhdHN1QmFzZSk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjQxCiAgICAvLyBAYTQuYWJpbWV0aG9kKCkKICAgIGNhbGxzdWIgc2V0X3NlcnZpY2VfY29udHJhY3RfYWRkcmVzcwogICAgYnl0ZSAweDAwCiAgICBpbnQgMAogICAgdW5jb3ZlciAyCiAgICBzZXRiaXQKICAgIGJ5dGUgMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludCAxCiAgICByZXR1cm4KCm1haW5fY3JlYXRlX3phaWJhdHN1X3Rva2VuX3JvdXRlQDg6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjQ3CiAgICAvLyBAYTQuYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBpcyBub3QgY3JlYXRpbmcKICAgIGNhbGxzdWIgY3JlYXRlX3phaWJhdHN1X3Rva2VuCiAgICBieXRlIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnQgMQogICAgcmV0dXJuCgptYWluX3RyYW5zZmVyX3phaV9yb3V0ZUA5OgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo1MgogICAgLy8gQGE0LmFiaW1ldGhvZCgpCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gaXMgbm90IGNyZWF0aW5nCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjEzCiAgICAvLyBjbGFzcyBaYWliYXRzdUF1dGhBbmREYW8oWmFpYmF0c3VCYXNlKToKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6NTIKICAgIC8vIEBhNC5hYmltZXRob2QoKQogICAgY2FsbHN1YiB0cmFuc2Zlcl96YWkKICAgIGJ5dGUgMHgwMAogICAgaW50IDAKICAgIHVuY292ZXIgMgogICAgc2V0Yml0CiAgICBieXRlIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnQgMQogICAgcmV0dXJuCgptYWluX2Z1bmRfcG9vbF9yb3V0ZUAxMDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6NjgKICAgIC8vIEBhNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGlzIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMwogICAgLy8gY2xhc3MgWmFpYmF0c3VBdXRoQW5kRGFvKFphaWJhdHN1QmFzZSk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAyCiAgICBidG9pCiAgICB0eG5hcyBBcHBsaWNhdGlvbnMKICAgIHR4biBHcm91cEluZGV4CiAgICBpbnQgMQogICAgLQogICAgZHVwCiAgICBndHhucyBUeXBlRW51bQogICAgaW50IGF4ZmVyCiAgICA9PQogICAgYXNzZXJ0IC8vIHRyYW5zYWN0aW9uIHR5cGUgaXMgYXhmZXIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6NjgKICAgIC8vIEBhNC5hYmltZXRob2QoKQogICAgY2FsbHN1YiBmdW5kX3Bvb2wKICAgIGJ5dGUgMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludCAxCiAgICByZXR1cm4KCm1haW5fYXBwcm92ZV9wb29sX3ZvdGVfcm91dGVAMTE6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5Ojk1CiAgICAvLyBAYTQuYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBpcyBub3QgY3JlYXRpbmcKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTMKICAgIC8vIGNsYXNzIFphaWJhdHN1QXV0aEFuZERhbyhaYWliYXRzdUJhc2UpOgogICAgdHhuIEdyb3VwSW5kZXgKICAgIGludCAxCiAgICAtCiAgICBkdXAKICAgIGd0eG5zIFR5cGVFbnVtCiAgICBpbnQgYXhmZXIKICAgID09CiAgICBhc3NlcnQgLy8gdHJhbnNhY3Rpb24gdHlwZSBpcyBheGZlcgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo5NQogICAgLy8gQGE0LmFiaW1ldGhvZCgpCiAgICBjYWxsc3ViIGFwcHJvdmVfcG9vbF92b3RlCiAgICBieXRlIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnQgMQogICAgcmV0dXJuCgptYWluX29wdF9jb250cmFjdF9pbnRvX2Fzc2V0X3JvdXRlQDEyOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6MzYKICAgIC8vIEBhNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGlzIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMwogICAgLy8gY2xhc3MgWmFpYmF0c3VBdXRoQW5kRGFvKFphaWJhdHN1QmFzZSk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICB0eG5hcyBBc3NldHMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjM2CiAgICAvLyBAYTQuYWJpbWV0aG9kKCkKICAgIGNhbGxzdWIgb3B0X2NvbnRyYWN0X2ludG9fYXNzZXQKICAgIGJ5dGUgMHgwMAogICAgaW50IDAKICAgIHVuY292ZXIgMgogICAgc2V0Yml0CiAgICBieXRlIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnQgMQogICAgcmV0dXJuCgptYWluX3RyYW5zZmVyX2Fzc2V0X3JvdXRlQDEzOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6NDEKICAgIC8vIEBhNC5hYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGlzIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMwogICAgLy8gY2xhc3MgWmFpYmF0c3VBdXRoQW5kRGFvKFphaWJhdHN1QmFzZSk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICB0eG5hcyBBc3NldHMKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGJ0b2kKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDMKICAgIGJ0b2kKICAgIHR4bmFzIEFjY291bnRzCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo0MQogICAgLy8gQGE0LmFiaW1ldGhvZCgpCiAgICBjYWxsc3ViIHRyYW5zZmVyX2Fzc2V0CiAgICBieXRlIDB4MDAKICAgIGludCAwCiAgICB1bmNvdmVyIDIKICAgIHNldGJpdAogICAgYnl0ZSAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50IDEKICAgIHJldHVybgoKCi8vIHNtYXJ0X2NvbnRyYWN0cy56YWliYXRzdV9hdXRoX2FuZF9kYW8uY29udHJhY3QuWmFpYmF0c3VBdXRoQW5kRGFvLmhlbGxvKG5hbWU6IGJ5dGVzKSAtPiBieXRlczoKaGVsbG86CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjE3LTE4CiAgICAvLyBAYTQuYWJpbWV0aG9kKCkKICAgIC8vIGRlZiBoZWxsbyhzZWxmLCBuYW1lOiBhNC5TdHJpbmcpIC0+IGE0LlN0cmluZzoKICAgIHByb3RvIDEgMQogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxOQogICAgLy8gcmV0dXJuICJIZWxsbywgIiArIG5hbWUKICAgIGZyYW1lX2RpZyAtMQogICAgZXh0cmFjdCAyIDAKICAgIGJ5dGUgMHg0ODY1NmM2YzZmMmMyMAogICAgc3dhcAogICAgY29uY2F0CiAgICBkdXAKICAgIGxlbgogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIHN3YXAKICAgIGNvbmNhdAogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzLnphaWJhdHN1X2F1dGhfYW5kX2Rhby5jb250cmFjdC5aYWliYXRzdUF1dGhBbmREYW8uY3JlYXRlKCkgLT4gdWludDY0OgpjcmVhdGU6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjIxLTIyCiAgICAvLyBAYTQuYWJpbWV0aG9kKGNyZWF0ZT0iYWxsb3ciKQogICAgLy8gZGVmIGNyZWF0ZShzZWxmKSAtPiBib29sOgogICAgcHJvdG8gMCAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjIzCiAgICAvLyBzZWxmLmFkbWlucy5hcHBlbmQoYTQuQWRkcmVzcyhhcC5UeG4uc2VuZGVyKSkKICAgIGludCAwCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weToxMwogICAgLy8gc2VsZi5hZG1pbnM6IEFkZHJlc3NBcnJheSA9IEFkZHJlc3NBcnJheSgpCiAgICBieXRlICJhZG1pbnMiCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjIzCiAgICAvLyBzZWxmLmFkbWlucy5hcHBlbmQoYTQuQWRkcmVzcyhhcC5UeG4uc2VuZGVyKSkKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5hZG1pbnMgZXhpc3RzCiAgICBleHRyYWN0IDIgMAogICAgdHhuIFNlbmRlcgogICAgY29uY2F0CiAgICBkdXAKICAgIGxlbgogICAgaW50IDMyCiAgICAvCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgc3dhcAogICAgY29uY2F0CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weToxMwogICAgLy8gc2VsZi5hZG1pbnM6IEFkZHJlc3NBcnJheSA9IEFkZHJlc3NBcnJheSgpCiAgICBieXRlICJhZG1pbnMiCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjIzCiAgICAvLyBzZWxmLmFkbWlucy5hcHBlbmQoYTQuQWRkcmVzcyhhcC5UeG4uc2VuZGVyKSkKICAgIHN3YXAKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjI0CiAgICAvLyByZXR1cm4gVHJ1ZQogICAgaW50IDEKICAgIHJldHN1YgoKCi8vIHNtYXJ0X2NvbnRyYWN0cy56YWliYXRzdV9hdXRoX2FuZF9kYW8uY29udHJhY3QuWmFpYmF0c3VBdXRoQW5kRGFvLnVwZGF0ZSgpIC0+IHVpbnQ2NDoKdXBkYXRlOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToyNi0yNwogICAgLy8gQGE0LmFiaW1ldGhvZChhbGxvd19hY3Rpb25zPVsiVXBkYXRlQXBwbGljYXRpb24iXSkKICAgIC8vIGRlZiB1cGRhdGUoc2VsZikgLT4gYm9vbDoKICAgIHByb3RvIDAgMQogICAgYnl0ZSAiIgogICAgZHVwCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjI4CiAgICAvLyBpZiBhcC5UeG4uc2VuZGVyID09IG9wLkdsb2JhbC5jcmVhdG9yX2FkZHJlc3M6CiAgICB0eG4gU2VuZGVyCiAgICBnbG9iYWwgQ3JlYXRvckFkZHJlc3MKICAgID09CiAgICBieiB1cGRhdGVfYWZ0ZXJfaWZfZWxzZUAyCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjI5CiAgICAvLyByZXR1cm4gVHJ1ZQogICAgaW50IDEKICAgIGZyYW1lX2J1cnkgMAogICAgcmV0c3ViCgp1cGRhdGVfYWZ0ZXJfaWZfZWxzZUAyOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTozMAogICAgLy8gZm9yIGluZGV4IGluIGFwLnVyYW5nZShzZWxmLmFkbWlucy5sZW5ndGgpOgogICAgaW50IDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjEzCiAgICAvLyBzZWxmLmFkbWluczogQWRkcmVzc0FycmF5ID0gQWRkcmVzc0FycmF5KCkKICAgIGJ5dGUgImFkbWlucyIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MzAKICAgIC8vIGZvciBpbmRleCBpbiBhcC51cmFuZ2Uoc2VsZi5hZG1pbnMubGVuZ3RoKToKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5hZG1pbnMgZXhpc3RzCiAgICBpbnQgMAogICAgZXh0cmFjdF91aW50MTYKICAgIGZyYW1lX2J1cnkgMQogICAgaW50IDAKICAgIGZyYW1lX2J1cnkgMAoKdXBkYXRlX2Zvcl9oZWFkZXJAMzoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MzAKICAgIC8vIGZvciBpbmRleCBpbiBhcC51cmFuZ2Uoc2VsZi5hZG1pbnMubGVuZ3RoKToKICAgIGZyYW1lX2RpZyAwCiAgICBmcmFtZV9kaWcgMQogICAgPAogICAgYnogdXBkYXRlX2FmdGVyX2ZvckA5CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjMxCiAgICAvLyBpZiBzZWxmLmFkbWluc1tpbmRleF0gPT0gYXAuVHhuLnNlbmRlcjoKICAgIGludCAwCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weToxMwogICAgLy8gc2VsZi5hZG1pbnM6IEFkZHJlc3NBcnJheSA9IEFkZHJlc3NBcnJheSgpCiAgICBieXRlICJhZG1pbnMiCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjMxCiAgICAvLyBpZiBzZWxmLmFkbWluc1tpbmRleF0gPT0gYXAuVHhuLnNlbmRlcjoKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5hZG1pbnMgZXhpc3RzCiAgICBleHRyYWN0IDIgMAogICAgZnJhbWVfZGlnIDAKICAgIGludCAzMgogICAgKgogICAgaW50IDMyCiAgICBleHRyYWN0MyAvLyBvbiBlcnJvcjogSW5kZXggYWNjZXNzIGlzIG91dCBvZiBib3VuZHMKICAgIHR4biBTZW5kZXIKICAgID09CiAgICBieiB1cGRhdGVfYWZ0ZXJfaWZfZWxzZUA2CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjMyCiAgICAvLyByZXR1cm4gVHJ1ZQogICAgaW50IDEKICAgIGZyYW1lX2J1cnkgMAogICAgcmV0c3ViCgp1cGRhdGVfYWZ0ZXJfaWZfZWxzZUA2OgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTozMAogICAgLy8gZm9yIGluZGV4IGluIGFwLnVyYW5nZShzZWxmLmFkbWlucy5sZW5ndGgpOgogICAgZnJhbWVfZGlnIDAKICAgIGludCAxCiAgICArCiAgICBmcmFtZV9idXJ5IDAKICAgIGIgdXBkYXRlX2Zvcl9oZWFkZXJAMwoKdXBkYXRlX2FmdGVyX2ZvckA5OgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTozMwogICAgLy8gcmV0dXJuIEZhbHNlCiAgICBpbnQgMAogICAgZnJhbWVfYnVyeSAwCiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMuemFpYmF0c3VfYXV0aF9hbmRfZGFvLmNvbnRyYWN0LlphaWJhdHN1QXV0aEFuZERhby5kZWxldGUoKSAtPiB1aW50NjQ6CmRlbGV0ZToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MzUtMzYKICAgIC8vIEBhNC5hYmltZXRob2QoYWxsb3dfYWN0aW9ucz1bIkRlbGV0ZUFwcGxpY2F0aW9uIl0pCiAgICAvLyBkZWYgZGVsZXRlKHNlbGYpIC0+IGJvb2w6CiAgICBwcm90byAwIDEKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MzcKICAgIC8vIGlmIGFwLlR4bi5zZW5kZXIgPT0gb3AuR2xvYmFsLmNyZWF0b3JfYWRkcmVzczoKICAgIHR4biBTZW5kZXIKICAgIGdsb2JhbCBDcmVhdG9yQWRkcmVzcwogICAgPT0KICAgIGJ6IGRlbGV0ZV9hZnRlcl9pZl9lbHNlQDIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MzgKICAgIC8vIHJldHVybiBUcnVlCiAgICBpbnQgMQogICAgcmV0c3ViCgpkZWxldGVfYWZ0ZXJfaWZfZWxzZUAyOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTozOQogICAgLy8gcmV0dXJuIEZhbHNlCiAgICBpbnQgMAogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzLnphaWJhdHN1X2F1dGhfYW5kX2Rhby5jb250cmFjdC5aYWliYXRzdUF1dGhBbmREYW8uc2V0X3NlcnZpY2VfY29udHJhY3RfYWRkcmVzcyhhZGRyZXNzOiBieXRlcykgLT4gdWludDY0OgpzZXRfc2VydmljZV9jb250cmFjdF9hZGRyZXNzOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo0MS00MgogICAgLy8gQGE0LmFiaW1ldGhvZCgpCiAgICAvLyBkZWYgc2V0X3NlcnZpY2VfY29udHJhY3RfYWRkcmVzcyhzZWxmLCBhZGRyZXNzOiBhNC5BZGRyZXNzKSAtPiBib29sOgogICAgcHJvdG8gMSAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjQzCiAgICAvLyBzZWxmLmF1dGhvcmlzZV90eG4oKQogICAgY2FsbHN1YiBhdXRob3Jpc2VfdHhuCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjQ0CiAgICAvLyBzZWxmLnNlcnZpY2VfY29udHJhY3RfYWRkcmVzcyA9IGFkZHJlc3MKICAgIGJ5dGUgInNlcnZpY2VfY29udHJhY3RfYWRkcmVzcyIKICAgIGZyYW1lX2RpZyAtMQogICAgYXBwX2dsb2JhbF9wdXQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6NDUKICAgIC8vIHJldHVybiBUcnVlCiAgICBpbnQgMQogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzLnphaWJhdHN1X2Jhc2UuY29udHJhY3QuWmFpYmF0c3VCYXNlLmF1dGhvcmlzZV90eG4oKSAtPiB2b2lkOgphdXRob3Jpc2VfdHhuOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6NjgtNjkKICAgIC8vIEBhcC5zdWJyb3V0aW5lCiAgICAvLyBkZWYgYXV0aG9yaXNlX3R4bihzZWxmKSAtPiBOb25lOgogICAgcHJvdG8gMCAwCiAgICBieXRlICIiCiAgICBkdXAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjcwCiAgICAvLyBpc19hdXRob3Jpc2VkID0gYTQuQm9vbCgpCiAgICBieXRlIDB4MDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjcxCiAgICAvLyBpZiBhcC5UeG4uc2VuZGVyID09IG9wLkdsb2JhbC5jcmVhdG9yX2FkZHJlc3M6CiAgICB0eG4gU2VuZGVyCiAgICBnbG9iYWwgQ3JlYXRvckFkZHJlc3MKICAgID09CiAgICBieiBhdXRob3Jpc2VfdHhuX2Vsc2VfYm9keUAyCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo3MgogICAgLy8gaXNfYXV0aG9yaXNlZCA9IGE0LkJvb2woVHJ1ZSkgICMgbm9xYTogRkJUMDAzCiAgICBieXRlIDB4ODAKICAgIGZyYW1lX2J1cnkgMgogICAgYiBhdXRob3Jpc2VfdHhuX2FmdGVyX2lmX2Vsc2VAMTAKCmF1dGhvcmlzZV90eG5fZWxzZV9ib2R5QDI6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo3NAogICAgLy8gZm9yIGluZGV4IGluIGFwLnVyYW5nZShzZWxmLmFkbWlucy5sZW5ndGgpOgogICAgaW50IDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjEzCiAgICAvLyBzZWxmLmFkbWluczogQWRkcmVzc0FycmF5ID0gQWRkcmVzc0FycmF5KCkKICAgIGJ5dGUgImFkbWlucyIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5Ojc0CiAgICAvLyBmb3IgaW5kZXggaW4gYXAudXJhbmdlKHNlbGYuYWRtaW5zLmxlbmd0aCk6CiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYuYWRtaW5zIGV4aXN0cwogICAgaW50IDAKICAgIGV4dHJhY3RfdWludDE2CiAgICBmcmFtZV9idXJ5IDEKICAgIGludCAwCiAgICBmcmFtZV9idXJ5IDAKCmF1dGhvcmlzZV90eG5fZm9yX2hlYWRlckAzOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6NzQKICAgIC8vIGZvciBpbmRleCBpbiBhcC51cmFuZ2Uoc2VsZi5hZG1pbnMubGVuZ3RoKToKICAgIGZyYW1lX2RpZyAwCiAgICBmcmFtZV9kaWcgMQogICAgPAogICAgYnogYXV0aG9yaXNlX3R4bl9hZnRlcl9pZl9lbHNlQDEwCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo3NQogICAgLy8gaWYgc2VsZi5hZG1pbnNbaW5kZXhdID09IGFwLlR4bi5zZW5kZXI6CiAgICBpbnQgMAogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6MTMKICAgIC8vIHNlbGYuYWRtaW5zOiBBZGRyZXNzQXJyYXkgPSBBZGRyZXNzQXJyYXkoKQogICAgYnl0ZSAiYWRtaW5zIgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6NzUKICAgIC8vIGlmIHNlbGYuYWRtaW5zW2luZGV4XSA9PSBhcC5UeG4uc2VuZGVyOgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBzZWxmLmFkbWlucyBleGlzdHMKICAgIGV4dHJhY3QgMiAwCiAgICBmcmFtZV9kaWcgMAogICAgaW50IDMyCiAgICAqCiAgICBpbnQgMzIKICAgIGV4dHJhY3QzIC8vIG9uIGVycm9yOiBJbmRleCBhY2Nlc3MgaXMgb3V0IG9mIGJvdW5kcwogICAgdHhuIFNlbmRlcgogICAgPT0KICAgIGJ6IGF1dGhvcmlzZV90eG5fYWZ0ZXJfaWZfZWxzZUA2CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo3NgogICAgLy8gaXNfYXV0aG9yaXNlZCA9IGE0LkJvb2woVHJ1ZSkgICMgbm9xYTogRkJUMDAzCiAgICBieXRlIDB4ODAKICAgIGZyYW1lX2J1cnkgMgoKYXV0aG9yaXNlX3R4bl9hZnRlcl9pZl9lbHNlQDY6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo3NAogICAgLy8gZm9yIGluZGV4IGluIGFwLnVyYW5nZShzZWxmLmFkbWlucy5sZW5ndGgpOgogICAgZnJhbWVfZGlnIDAKICAgIGludCAxCiAgICArCiAgICBmcmFtZV9idXJ5IDAKICAgIGIgYXV0aG9yaXNlX3R4bl9mb3JfaGVhZGVyQDMKCmF1dGhvcmlzZV90eG5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5Ojc3CiAgICAvLyBhc3NlcnQgaXNfYXV0aG9yaXNlZCwgIllvdSBhcmUgbm90IGF1dGhvcmlzZWQgdG8gcGVyZm9ybSB0aGlzIGFjdGlvbiIKICAgIGZyYW1lX2RpZyAyCiAgICBieXRlIDB4MDAKICAgICE9CiAgICBhc3NlcnQgLy8gWW91IGFyZSBub3QgYXV0aG9yaXNlZCB0byBwZXJmb3JtIHRoaXMgYWN0aW9uCiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMuemFpYmF0c3VfYXV0aF9hbmRfZGFvLmNvbnRyYWN0LlphaWJhdHN1QXV0aEFuZERhby5jcmVhdGVfemFpYmF0c3VfdG9rZW4oKSAtPiBieXRlczoKY3JlYXRlX3phaWJhdHN1X3Rva2VuOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo0Ny00OAogICAgLy8gQGE0LmFiaW1ldGhvZCgpCiAgICAvLyBkZWYgY3JlYXRlX3phaWJhdHN1X3Rva2VuKHNlbGYpIC0+IGE0LlVJbnQ2NDoKICAgIHByb3RvIDAgMQogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo0OQogICAgLy8gc2VsZi5oYW5kbGVfY3JlYXRlX3phaV90b2tlbigpCiAgICBjYWxsc3ViIGhhbmRsZV9jcmVhdGVfemFpX3Rva2VuCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjUwCiAgICAvLyByZXR1cm4gc2VsZi5nZXRfemFpX3Rva2VuKCkKICAgIGNhbGxzdWIgZ2V0X3phaV90b2tlbgogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzLnphaWJhdHN1X2F1dGhfYW5kX2Rhby5jb250cmFjdC5aYWliYXRzdUF1dGhBbmREYW8uaGFuZGxlX2NyZWF0ZV96YWlfdG9rZW4oKSAtPiB2b2lkOgpoYW5kbGVfY3JlYXRlX3phaV90b2tlbjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTExLTExMgogICAgLy8gQGFwLnN1YnJvdXRpbmUKICAgIC8vIGRlZiBoYW5kbGVfY3JlYXRlX3phaV90b2tlbihzZWxmKSAtPiBOb25lOgogICAgcHJvdG8gMCAwCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjExMwogICAgLy8gYm94ID0gb3AuQm94LmdldChiIlpBSSIpCiAgICBieXRlIDB4NWE0MTQ5CiAgICBib3hfZ2V0CiAgICBidXJ5IDEKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTE0CiAgICAvLyBpZiBub3QgYm94WzFdOgogICAgYm56IGhhbmRsZV9jcmVhdGVfemFpX3Rva2VuX2FmdGVyX2lmX2Vsc2VAMwogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMjIKICAgIC8vIG1hbmFnZXI9YXAuR2xvYmFsLmN1cnJlbnRfYXBwbGljYXRpb25fYWRkcmVzcywKICAgIGdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjEyMy0xMjUKICAgIC8vIHJlc2VydmU9YXAuR2xvYmFsLmN1cnJlbnRfYXBwbGljYXRpb25fYWRkcmVzcywKICAgIC8vIGZyZWV6ZT1hcC5HbG9iYWwuY3VycmVudF9hcHBsaWNhdGlvbl9hZGRyZXNzLAogICAgLy8gY2xhd2JhY2s9YXAuR2xvYmFsLmN1cnJlbnRfYXBwbGljYXRpb25fYWRkcmVzcywKICAgIGR1cG4gMwogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMjcKICAgIC8vIGFzc2V0X3R4bi5zdWJtaXQoKQogICAgaXR4bl9iZWdpbgogICAgaXR4bl9maWVsZCBDb25maWdBc3NldENsYXdiYWNrCiAgICBpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0RnJlZXplCiAgICBpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0UmVzZXJ2ZQogICAgaXR4bl9maWVsZCBDb25maWdBc3NldE1hbmFnZXIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTIxCiAgICAvLyBhc3NldF9uYW1lPSJaQUkiLAogICAgYnl0ZSAiWkFJIgogICAgaXR4bl9maWVsZCBDb25maWdBc3NldE5hbWUKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTIwCiAgICAvLyB1bml0X25hbWU9IlpBSSIsCiAgICBieXRlICJaQUkiCiAgICBpdHhuX2ZpZWxkIENvbmZpZ0Fzc2V0VW5pdE5hbWUKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTE5CiAgICAvLyB1cmw9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2Rldi1tZWRpYS9pbWFnZS91cGxvYWQvdjE3MjIwMTE4NjcvWmFpYmF0c3Vfel8xMjM0X0NpcmNsZV95anQ0OWMucG5nIiwKICAgIGJ5dGUgImh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2Rldi1tZWRpYS9pbWFnZS91cGxvYWQvdjE3MjIwMTE4NjcvWmFpYmF0c3Vfel8xMjM0X0NpcmNsZV95anQ0OWMucG5nIgogICAgaXR4bl9maWVsZCBDb25maWdBc3NldFVSTAogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMTgKICAgIC8vIHRvdGFsPTFfMDAwXzAwMF8wMDBfMDAwLAogICAgaW50IDEwMDAwMDAwMDAwMDAKICAgIGl0eG5fZmllbGQgQ29uZmlnQXNzZXRUb3RhbAogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMTcKICAgIC8vIGRlY2ltYWxzPTYsCiAgICBpbnQgNgogICAgaXR4bl9maWVsZCBDb25maWdBc3NldERlY2ltYWxzCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjExNQogICAgLy8gYXNzZXRfdHhuID0gYXAuaXR4bi5Bc3NldENvbmZpZygKICAgIGludCBhY2ZnCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjExNgogICAgLy8gZmVlPTEwMDAsCiAgICBpbnQgMTAwMAogICAgaXR4bl9maWVsZCBGZWUKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTI3CiAgICAvLyBhc3NldF90eG4uc3VibWl0KCkKICAgIGl0eG5fc3VibWl0CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjEyOAogICAgLy8gYXNzZXRfaWQgPSBvcC5JVHhuLmNyZWF0ZWRfYXNzZXRfaWQoKS5pZAogICAgaXR4biBDcmVhdGVkQXNzZXRJRAogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMjkKICAgIC8vIG9wLkJveC5wdXQoYiJaQUkiLCBhNC5VSW50NjQoYXNzZXRfaWQpLmJ5dGVzKQogICAgaXRvYgogICAgYnl0ZSAweDVhNDE0OQogICAgc3dhcAogICAgYm94X3B1dAoKaGFuZGxlX2NyZWF0ZV96YWlfdG9rZW5fYWZ0ZXJfaWZfZWxzZUAzOgogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzLnphaWJhdHN1X2F1dGhfYW5kX2Rhby5jb250cmFjdC5aYWliYXRzdUF1dGhBbmREYW8uZ2V0X3phaV90b2tlbigpIC0+IGJ5dGVzOgpnZXRfemFpX3Rva2VuOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMzEtMTMyCiAgICAvLyBAYXAuc3Vicm91dGluZQogICAgLy8gZGVmIGdldF96YWlfdG9rZW4oc2VsZikgLT4gYTQuVUludDY0OgogICAgcHJvdG8gMCAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjEzMwogICAgLy8gYm94X2RhdGEsIGV4aXN0cyA9IG9wLkJveC5nZXQoYiJaQUkiKQogICAgYnl0ZSAweDVhNDE0OQogICAgYm94X2dldAogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMzUKICAgIC8vIGlmIG5vdCBleGlzdHM6CiAgICBibnogZ2V0X3phaV90b2tlbl9lbHNlX2JvZHlAMgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMzYKICAgIC8vIHNlbGYuaGFuZGxlX2NyZWF0ZV96YWlfdG9rZW4oKQogICAgY2FsbHN1YiBoYW5kbGVfY3JlYXRlX3phaV90b2tlbgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMzcKICAgIC8vIGJveF9kYXRhLCBleGlzdHMgPSBvcC5Cb3guZ2V0KGIiWkFJIikKICAgIGJ5dGUgMHg1YTQxNDkKICAgIGJveF9nZXQKICAgIHBvcAogICAgYiBnZXRfemFpX3Rva2VuX2FmdGVyX2lmX2Vsc2VAMwoKZ2V0X3phaV90b2tlbl9lbHNlX2JvZHlAMjoKICAgIGZyYW1lX2RpZyAwCgpnZXRfemFpX3Rva2VuX2FmdGVyX2lmX2Vsc2VAMzoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTQxCiAgICAvLyByZXR1cm4gemFpX2Fzc2V0X2lkCiAgICBzd2FwCiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMuemFpYmF0c3VfYXV0aF9hbmRfZGFvLmNvbnRyYWN0LlphaWJhdHN1QXV0aEFuZERhby50cmFuc2Zlcl96YWkodG86IGJ5dGVzLCBhc3NldF9hbW91bnQ6IGJ5dGVzLCBub3RlOiBieXRlcykgLT4gdWludDY0Ogp0cmFuc2Zlcl96YWk6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjUyLTU1CiAgICAvLyBAYTQuYWJpbWV0aG9kKCkKICAgIC8vIGRlZiB0cmFuc2Zlcl96YWkoCiAgICAvLyAgICAgc2VsZiwgdG86IGE0LkFkZHJlc3MsIGFzc2V0X2Ftb3VudDogYTQuVUludDY0LCBub3RlOiBhNC5TdHJpbmcKICAgIC8vICkgLT4gYm9vbDoKICAgIHByb3RvIDMgMQogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo1NgogICAgLy8gc2VsZi5hdXRob3Jpc2VfdHhuKCkKICAgIGNhbGxzdWIgYXV0aG9yaXNlX3R4bgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo1NwogICAgLy8gemFpX2Fzc2V0X2lkID0gc2VsZi5nZXRfemFpX3Rva2VuKCkKICAgIGNhbGxzdWIgZ2V0X3phaV90b2tlbgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo2MQogICAgLy8gYXNzZXRfYW1vdW50PWFzc2V0X2Ftb3VudC5uYXRpdmUsCiAgICBmcmFtZV9kaWcgLTIKICAgIGJ0b2kKICAgIHN3YXAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6NjIKICAgIC8vIHhmZXJfYXNzZXQ9emFpX2Fzc2V0X2lkLm5hdGl2ZSwKICAgIGJ0b2kKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6NjMKICAgIC8vIG5vdGU9bm90ZS5uYXRpdmUsCiAgICBmcmFtZV9kaWcgLTEKICAgIGV4dHJhY3QgMiAwCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjY1CiAgICAvLyB0eG4uc3VibWl0KCkKICAgIGl0eG5fYmVnaW4KICAgIGl0eG5fZmllbGQgTm90ZQogICAgaXR4bl9maWVsZCBYZmVyQXNzZXQKICAgIGl0eG5fZmllbGQgQXNzZXRBbW91bnQKICAgIGZyYW1lX2RpZyAtMwogICAgaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjU4CiAgICAvLyB0eG4gPSBhcC5pdHhuLkFzc2V0VHJhbnNmZXIoCiAgICBpbnQgYXhmZXIKICAgIGl0eG5fZmllbGQgVHlwZUVudW0KICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6NTkKICAgIC8vIGZlZT0xMDAwLAogICAgaW50IDEwMDAKICAgIGl0eG5fZmllbGQgRmVlCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjY1CiAgICAvLyB0eG4uc3VibWl0KCkKICAgIGl0eG5fc3VibWl0CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjY2CiAgICAvLyByZXR1cm4gVHJ1ZQogICAgaW50IDEKICAgIHJldHN1YgoKCi8vIHNtYXJ0X2NvbnRyYWN0cy56YWliYXRzdV9hdXRoX2FuZF9kYW8uY29udHJhY3QuWmFpYmF0c3VBdXRoQW5kRGFvLmZ1bmRfcG9vbChmdW5kX2Ftb3VudDogdWludDY0LCBmb2xrc19mZWVkX29yYWNsZTogdWludDY0LCB0eG46IHVpbnQ2NCkgLT4gYnl0ZXM6CmZ1bmRfcG9vbDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6NjgtNzQKICAgIC8vIEBhNC5hYmltZXRob2QoKQogICAgLy8gZGVmIGZ1bmRfcG9vbCgKICAgIC8vICAgICBzZWxmLAogICAgLy8gICAgIGZ1bmRfYW1vdW50OiBhcC5VSW50NjQsCiAgICAvLyAgICAgZm9sa3NfZmVlZF9vcmFjbGU6IGFwLkFwcGxpY2F0aW9uLAogICAgLy8gICAgIHR4bjogZ3R4bi5Bc3NldFRyYW5zZmVyVHJhbnNhY3Rpb24sCiAgICAvLyApIC0+IFBvb2xGdW5kUmVzcG9uc2U6CiAgICBwcm90byAzIDEKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6NzYKICAgIC8vIGFzc2V0X2RvbGxhcl9wcmljZSA9IHNlbGYuZ2V0X2Fzc2V0X3ByaWNlKGZvbGtzX2ZlZWRfb3JhY2xlLCB0eG4ueGZlcl9hc3NldCkKICAgIGZyYW1lX2RpZyAtMQogICAgZ3R4bnMgWGZlckFzc2V0CiAgICBmcmFtZV9kaWcgLTIKICAgIHN3YXAKICAgIGNhbGxzdWIgZ2V0X2Fzc2V0X3ByaWNlCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5Ojc4CiAgICAvLyB0eG4uYXNzZXRfcmVjZWl2ZXIgPT0gc2VsZi5zZXJ2aWNlX2NvbnRyYWN0X2FkZHJlc3MubmF0aXZlCiAgICBmcmFtZV9kaWcgLTEKICAgIGd0eG5zIEFzc2V0UmVjZWl2ZXIKICAgIGludCAwCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjQ0CiAgICAvLyBzZWxmLnNlcnZpY2VfY29udHJhY3RfYWRkcmVzcyA9IGFkZHJlc3MKICAgIGJ5dGUgInNlcnZpY2VfY29udHJhY3RfYWRkcmVzcyIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6NzgKICAgIC8vIHR4bi5hc3NldF9yZWNlaXZlciA9PSBzZWxmLnNlcnZpY2VfY29udHJhY3RfYWRkcmVzcy5uYXRpdmUKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5zZXJ2aWNlX2NvbnRyYWN0X2FkZHJlc3MgZXhpc3RzCiAgICA9PQogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo3Ny03OQogICAgLy8gYXNzZXJ0ICgKICAgIC8vICAgICB0eG4uYXNzZXRfcmVjZWl2ZXIgPT0gc2VsZi5zZXJ2aWNlX2NvbnRyYWN0X2FkZHJlc3MubmF0aXZlCiAgICAvLyApLCAiVGhlIGFzc2V0X3JlY2VpdmVyIG11dCBiZSB0aGUgWmFpYmF0c3VTZXJ2aWNlIGFjY291bnQiCiAgICBhc3NlcnQgLy8gVGhlIGFzc2V0X3JlY2VpdmVyIG11dCBiZSB0aGUgWmFpYmF0c3VTZXJ2aWNlIGFjY291bnQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6ODEtODMKICAgIC8vIGFtb3VudF9wbHVzX3RyYW5zYWN0aW9uX2ZlZSA9IHNlbGYuY2FsY3VsYXRlX2FtdF9wbHVzX2ZlZSgKICAgIC8vICAgICBmdW5kX2Ftb3VudCwgYXAuVUludDY0KDEpCiAgICAvLyApCiAgICBmcmFtZV9kaWcgLTMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6ODIKICAgIC8vIGZ1bmRfYW1vdW50LCBhcC5VSW50NjQoMSkKICAgIGludCAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjgxLTgzCiAgICAvLyBhbW91bnRfcGx1c190cmFuc2FjdGlvbl9mZWUgPSBzZWxmLmNhbGN1bGF0ZV9hbXRfcGx1c19mZWUoCiAgICAvLyAgICAgZnVuZF9hbW91bnQsIGFwLlVJbnQ2NCgxKQogICAgLy8gKQogICAgY2FsbHN1YiBjYWxjdWxhdGVfYW10X3BsdXNfZmVlCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5Ojg1CiAgICAvLyB0eG4uYXNzZXRfYW1vdW50ID49IGFtb3VudF9wbHVzX3RyYW5zYWN0aW9uX2ZlZQogICAgZnJhbWVfZGlnIC0xCiAgICBndHhucyBBc3NldEFtb3VudAogICAgPD0KICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6ODQtODYKICAgIC8vIGFzc2VydCAoCiAgICAvLyAgICAgdHhuLmFzc2V0X2Ftb3VudCA+PSBhbW91bnRfcGx1c190cmFuc2FjdGlvbl9mZWUKICAgIC8vICksICJUaGUgdHhuIGFtb3VudCBpcyBpbnN1ZmZpY2llbnQiCiAgICBhc3NlcnQgLy8gVGhlIHR4biBhbW91bnQgaXMgaW5zdWZmaWNpZW50CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5Ojg5CiAgICAvLyBhbW91bnQ9YTQuVUludDY0KGZ1bmRfYW1vdW50KSwKICAgIGZyYW1lX2RpZyAtMwogICAgaXRvYgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo5MQogICAgLy8gYXNzZXRfcHJpY2U9YTQuVUludDY0KGFzc2V0X2RvbGxhcl9wcmljZSksCiAgICBzd2FwCiAgICBpdG9iCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5Ojg4LTkyCiAgICAvLyByZXNwb25zZSA9IFBvb2xGdW5kUmVzcG9uc2UoCiAgICAvLyAgICAgYW1vdW50PWE0LlVJbnQ2NChmdW5kX2Ftb3VudCksCiAgICAvLyAgICAgc3VjY2Vzcz1hNC5Cb29sKFRydWUpLCAgIyBub3FhOiBGQlQwMDMKICAgIC8vICAgICBhc3NldF9wcmljZT1hNC5VSW50NjQoYXNzZXRfZG9sbGFyX3ByaWNlKSwKICAgIC8vICkKICAgIGNvbmNhdAogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo5MAogICAgLy8gc3VjY2Vzcz1hNC5Cb29sKFRydWUpLCAgIyBub3FhOiBGQlQwMDMKICAgIGJ5dGUgMHg4MAogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo4OC05MgogICAgLy8gcmVzcG9uc2UgPSBQb29sRnVuZFJlc3BvbnNlKAogICAgLy8gICAgIGFtb3VudD1hNC5VSW50NjQoZnVuZF9hbW91bnQpLAogICAgLy8gICAgIHN1Y2Nlc3M9YTQuQm9vbChUcnVlKSwgICMgbm9xYTogRkJUMDAzCiAgICAvLyAgICAgYXNzZXRfcHJpY2U9YTQuVUludDY0KGFzc2V0X2RvbGxhcl9wcmljZSksCiAgICAvLyApCiAgICBjb25jYXQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6OTMKICAgIC8vIHJldHVybiByZXNwb25zZQogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzLnphaWJhdHN1X2Jhc2UuY29udHJhY3QuWmFpYmF0c3VCYXNlLmdldF9hc3NldF9wcmljZShmb2xrc19mZWVkX29yYWNsZTogdWludDY0LCBhc2E6IHVpbnQ2NCkgLT4gdWludDY0OgpnZXRfYXNzZXRfcHJpY2U6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weToxMjAtMTIzCiAgICAvLyBAYXAuc3Vicm91dGluZQogICAgLy8gZGVmIGdldF9hc3NldF9wcmljZSgKICAgIC8vICAgICBzZWxmLCBmb2xrc19mZWVkX29yYWNsZTogYXAuQXBwbGljYXRpb24sIGFzYTogYXAuQXNzZXQKICAgIC8vICkgLT4gYXAuVUludDY0OgogICAgcHJvdG8gMiAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weToxMjQKICAgIC8vIFt2YWx1ZSwgZXhpc3RzXSA9IG9wLkFwcEdsb2JhbC5nZXRfZXhfYnl0ZXMoZm9sa3NfZmVlZF9vcmFjbGUsIG9wLml0b2IoYXNhLmlkKSkKICAgIGZyYW1lX2RpZyAtMQogICAgaXRvYgogICAgZnJhbWVfZGlnIC0yCiAgICBzd2FwCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6MTI1CiAgICAvLyBhc3NlcnQgZXhpc3RzLCAiVGhpcyBhc2V0IGlzIG5vdCBzdXBwb3J0ZWQiCiAgICBhc3NlcnQgLy8gVGhpcyBhc2V0IGlzIG5vdCBzdXBwb3J0ZWQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjEyNgogICAgLy8gcmV0dXJuIG9wLmV4dHJhY3RfdWludDY0KHZhbHVlLCBhcC5VSW50NjQoMCkpCiAgICBpbnQgMAogICAgZXh0cmFjdF91aW50NjQKICAgIHJldHN1YgoKCi8vIHNtYXJ0X2NvbnRyYWN0cy56YWliYXRzdV9iYXNlLmNvbnRyYWN0LlphaWJhdHN1QmFzZS5jYWxjdWxhdGVfYW10X3BsdXNfZmVlKGFtdDogdWludDY0LCBtdWx0aXBsZXM6IHVpbnQ2NCkgLT4gdWludDY0OgpjYWxjdWxhdGVfYW10X3BsdXNfZmVlOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6MTEzLTExNAogICAgLy8gQGFwLnN1YnJvdXRpbmUKICAgIC8vIGRlZiBjYWxjdWxhdGVfYW10X3BsdXNfZmVlKHNlbGYsIGFtdDogYXAuVUludDY0LCBtdWx0aXBsZXM6IGFwLlVJbnQ2NCkgLT4gYXAuVUludDY0OgogICAgcHJvdG8gMiAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weToxMTUKICAgIC8vIGZlZV9wZXJjZW50YWdlID0gYXAuVUludDY0KDEwKSAqIG11bHRpcGxlcwogICAgaW50IDEwCiAgICBmcmFtZV9kaWcgLTEKICAgICoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjExNgogICAgLy8gbXVsdGlwbGllZCA9IGZlZV9wZXJjZW50YWdlICogYW10CiAgICBmcmFtZV9kaWcgLTIKICAgICoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjExNwogICAgLy8gaGFsZl9wZXJjZW50ID0gbXVsdGlwbGllZCAvLyAxMDAwCiAgICBpbnQgMTAwMAogICAgLwogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6MTE4CiAgICAvLyByZXR1cm4gaGFsZl9wZXJjZW50CiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMuemFpYmF0c3VfYXV0aF9hbmRfZGFvLmNvbnRyYWN0LlphaWJhdHN1QXV0aEFuZERhby5hcHByb3ZlX3Bvb2xfdm90ZSh0eG46IHVpbnQ2NCkgLT4gYnl0ZXM6CmFwcHJvdmVfcG9vbF92b3RlOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weTo5NS05OQogICAgLy8gQGE0LmFiaW1ldGhvZCgpCiAgICAvLyBkZWYgYXBwcm92ZV9wb29sX3ZvdGUoCiAgICAvLyAgICAgc2VsZiwKICAgIC8vICAgICB0eG46IGd0eG4uQXNzZXRUcmFuc2ZlclRyYW5zYWN0aW9uLAogICAgLy8gKSAtPiBQb29sVm90ZUFwcHJvdmFsUmVzcG9uc2U6CiAgICBwcm90byAxIDEKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTAwCiAgICAvLyB6YWlfYXNzZXRfaWQgPSBzZWxmLmdldF96YWlfdG9rZW4oKQogICAgY2FsbHN1YiBnZXRfemFpX3Rva2VuCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjEwMgogICAgLy8gdHhuLnhmZXJfYXNzZXQuaWQgPT0gemFpX2Fzc2V0X2lkLm5hdGl2ZQogICAgZnJhbWVfZGlnIC0xCiAgICBndHhucyBYZmVyQXNzZXQKICAgIHN3YXAKICAgIGJ0b2kKICAgID09CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYXV0aF9hbmRfZGFvL2NvbnRyYWN0LnB5OjEwMS0xMDMKICAgIC8vIGFzc2VydCAoCiAgICAvLyAgICAgdHhuLnhmZXJfYXNzZXQuaWQgPT0gemFpX2Fzc2V0X2lkLm5hdGl2ZQogICAgLy8gKSwgIlRoZSBhc3NldCB0cmFuc2ZlcmVkIG11c3QgYmUgdGhlIHBvb2wgdG9rZW4iCiAgICBhc3NlcnQgLy8gVGhlIGFzc2V0IHRyYW5zZmVyZWQgbXVzdCBiZSB0aGUgcG9vbCB0b2tlbgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMDYKICAgIC8vIG11bHRpcGxpZXI9YTQuVUludDY0KHR4bi5hc3NldF9hbW91bnQpLAogICAgZnJhbWVfZGlnIC0xCiAgICBndHhucyBBc3NldEFtb3VudAogICAgaXRvYgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMDcKICAgIC8vIHR4bl9pZD1hNC5TdHJpbmcuZnJvbV9ieXRlcyh0eG4udHhuX2lkKSwKICAgIGZyYW1lX2RpZyAtMQogICAgZ3R4bnMgVHhJRAogICAgc3dhcAogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMDUtMTA4CiAgICAvLyByZXNwb25zZSA9IFBvb2xWb3RlQXBwcm92YWxSZXNwb25zZSgKICAgIC8vICAgICBtdWx0aXBsaWVyPWE0LlVJbnQ2NCh0eG4uYXNzZXRfYW1vdW50KSwKICAgIC8vICAgICB0eG5faWQ9YTQuU3RyaW5nLmZyb21fYnl0ZXModHhuLnR4bl9pZCksCiAgICAvLyApCiAgICBieXRlIDB4MDAwYQogICAgY29uY2F0CiAgICBzd2FwCiAgICBjb25jYXQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTA5CiAgICAvLyByZXR1cm4gcmVzcG9uc2UKICAgIHJldHN1YgoKCi8vIHNtYXJ0X2NvbnRyYWN0cy56YWliYXRzdV9iYXNlLmNvbnRyYWN0LlphaWJhdHN1QmFzZS5vcHRfY29udHJhY3RfaW50b19hc3NldChhc3NldDogdWludDY0KSAtPiB1aW50NjQ6Cm9wdF9jb250cmFjdF9pbnRvX2Fzc2V0OgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6MzYtMzcKICAgIC8vIEBhNC5hYmltZXRob2QoKQogICAgLy8gZGVmIG9wdF9jb250cmFjdF9pbnRvX2Fzc2V0KHNlbGYsIGFzc2V0OiBhcC5Bc3NldCkgLT4gYm9vbDoKICAgIHByb3RvIDEgMQogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6MzgKICAgIC8vIHNlbGYub3B0X2FwcF9pbnRvX2Fzc2V0KGFzc2V0KQogICAgZnJhbWVfZGlnIC0xCiAgICBjYWxsc3ViIG9wdF9hcHBfaW50b19hc3NldAogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2Jhc2UvY29udHJhY3QucHk6MzkKICAgIC8vIHJldHVybiBUcnVlCiAgICBpbnQgMQogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzLnphaWJhdHN1X2Jhc2UuY29udHJhY3QuWmFpYmF0c3VCYXNlLm9wdF9hcHBfaW50b19hc3NldChhc3NldDogdWludDY0KSAtPiB2b2lkOgpvcHRfYXBwX2ludG9fYXNzZXQ6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo1NS01OQogICAgLy8gIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogICAgLy8gIyMjIyMjIyMjIyMjIyMjIyMjIyMjICAgU3Vicm91dGluZXMgICAgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogICAgLy8gIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogICAgLy8gQGFwLnN1YnJvdXRpbmUKICAgIC8vIGRlZiBvcHRfYXBwX2ludG9fYXNzZXQoc2VsZiwgYXNzZXQ6IGFwLkFzc2V0KSAtPiBOb25lOgogICAgcHJvdG8gMSAwCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo2NAogICAgLy8gYXNzZXRfcmVjZWl2ZXI9YXAuR2xvYmFsLmN1cnJlbnRfYXBwbGljYXRpb25fYWRkcmVzcywKICAgIGdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo2NgogICAgLy8gdHhuLnN1Ym1pdCgpCiAgICBpdHhuX2JlZ2luCiAgICBpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKICAgIGZyYW1lX2RpZyAtMQogICAgaXR4bl9maWVsZCBYZmVyQXNzZXQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjYxCiAgICAvLyBhc3NldF9hbW91bnQ9MCwKICAgIGludCAwCiAgICBpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo2MAogICAgLy8gdHhuID0gYXAuaXR4bi5Bc3NldFRyYW5zZmVyKAogICAgaW50IGF4ZmVyCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo2MgogICAgLy8gZmVlPTEwMDAsCiAgICBpbnQgMTAwMAogICAgaXR4bl9maWVsZCBGZWUKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjY2CiAgICAvLyB0eG4uc3VibWl0KCkKICAgIGl0eG5fc3VibWl0CiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMuemFpYmF0c3VfYmFzZS5jb250cmFjdC5aYWliYXRzdUJhc2UudHJhbnNmZXJfYXNzZXQoYXNzZXQ6IHVpbnQ2NCwgYXNzZXRfYW1vdW50OiB1aW50NjQsIHJlY2lwaWVudDogYnl0ZXMpIC0+IHVpbnQ2NDoKdHJhbnNmZXJfYXNzZXQ6CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo0MS00NAogICAgLy8gQGE0LmFiaW1ldGhvZCgpCiAgICAvLyBkZWYgdHJhbnNmZXJfYXNzZXQoCiAgICAvLyAgICAgc2VsZiwgYXNzZXQ6IGFwLkFzc2V0LCBhc3NldF9hbW91bnQ6IGFwLlVJbnQ2NCwgcmVjaXBpZW50OiBhcC5BY2NvdW50CiAgICAvLyApIC0+IGJvb2w6CiAgICBwcm90byAzIDEKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjQ1CiAgICAvLyBzZWxmLmF1dGhvcmlzZV90eG4oKQogICAgY2FsbHN1YiBhdXRob3Jpc2VfdHhuCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo1MgogICAgLy8gdHhuLnN1Ym1pdCgpCiAgICBpdHhuX2JlZ2luCiAgICBmcmFtZV9kaWcgLTIKICAgIGl0eG5fZmllbGQgQXNzZXRBbW91bnQKICAgIGZyYW1lX2RpZyAtMQogICAgaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCiAgICBmcmFtZV9kaWcgLTMKICAgIGl0eG5fZmllbGQgWGZlckFzc2V0CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo0NgogICAgLy8gdHhuID0gYXAuaXR4bi5Bc3NldFRyYW5zZmVyKAogICAgaW50IGF4ZmVyCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo0NwogICAgLy8gZmVlPTEwMDAsCiAgICBpbnQgMTAwMAogICAgaXR4bl9maWVsZCBGZWUKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9iYXNlL2NvbnRyYWN0LnB5OjUyCiAgICAvLyB0eG4uc3VibWl0KCkKICAgIGl0eG5fc3VibWl0CiAgICAvLyBzbWFydF9jb250cmFjdHMvemFpYmF0c3VfYmFzZS9jb250cmFjdC5weTo1MwogICAgLy8gcmV0dXJuIFRydWUKICAgIGludCAxCiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMuemFpYmF0c3VfYXV0aF9hbmRfZGFvLmNvbnRyYWN0LlphaWJhdHN1QXV0aEFuZERhby5fX2luaXRfXygpIC0+IHZvaWQ6Cl9faW5pdF9fOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxNAogICAgLy8gZGVmIF9faW5pdF9fKHNlbGYpIC0+IE5vbmU6CiAgICBwcm90byAwIDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy96YWliYXRzdV9hdXRoX2FuZF9kYW8vY29udHJhY3QucHk6MTUKICAgIC8vIHNlbGYuemFpX3Rva2VuX2Fzc2V0X2lkOiBhNC5VSW50NjQgPSBhNC5VSW50NjQoKQogICAgYnl0ZSAiemFpX3Rva2VuX2Fzc2V0X2lkIgogICAgYnl0ZSAweDAwMDAwMDAwMDAwMDAwMDAKICAgIGFwcF9nbG9iYWxfcHV0CiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuemFpYmF0c3VfYXV0aF9hbmRfZGFvLmNvbnRyYWN0LlphaWJhdHN1QXV0aEFuZERhby5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgLy8gc21hcnRfY29udHJhY3RzL3phaWJhdHN1X2F1dGhfYW5kX2Rhby9jb250cmFjdC5weToxMwogICAgLy8gY2xhc3MgWmFpYmF0c3VBdXRoQW5kRGFvKFphaWJhdHN1QmFzZSk6CiAgICBpbnQgMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 4,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "admins": {
                    "type": "bytes",
                    "key": "admins"
                },
                "service_contract": {
                    "type": "bytes",
                    "key": "service_contract"
                },
                "service_contract_address": {
                    "type": "bytes",
                    "key": "service_contract_address"
                },
                "zai_token_asset_id": {
                    "type": "bytes",
                    "key": "zai_token_asset_id"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "ZaibatsuAuthAndDao",
        "methods": [
            {
                "name": "hello",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "create",
                "args": [],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "update",
                "args": [],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "delete",
                "args": [],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "set_service_contract_address",
                "args": [
                    {
                        "type": "address",
                        "name": "address"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "create_zaibatsu_token",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "transfer_zai",
                "args": [
                    {
                        "type": "address",
                        "name": "to"
                    },
                    {
                        "type": "uint64",
                        "name": "asset_amount"
                    },
                    {
                        "type": "string",
                        "name": "note"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "fund_pool",
                "args": [
                    {
                        "type": "uint64",
                        "name": "fund_amount"
                    },
                    {
                        "type": "application",
                        "name": "folks_feed_oracle"
                    },
                    {
                        "type": "axfer",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "(uint64,uint64,bool)"
                }
            },
            {
                "name": "approve_pool_vote",
                "args": [
                    {
                        "type": "axfer",
                        "name": "txn"
                    }
                ],
                "returns": {
                    "type": "(uint64,string)"
                }
            },
            {
                "name": "opt_contract_into_asset",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "transfer_asset",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "asset_amount"
                    },
                    {
                        "type": "account",
                        "name": "recipient"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}